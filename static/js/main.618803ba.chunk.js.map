{"version":3,"sources":["common/styles/common.js","Navigation/StylesNav.js","Navigation/Navigation.js","Game/components/GameField/GameFieldStyle.js","Game/components/GameField/components/components/GameCell/GameCell.js","Game/components/GameField/components/GameChips.js","Game/GameStyles.js","Game/components/GameField/GameFunctions/generateGameElements.js","Game/components/GameField/components/GameOver.js","Game/components/GameField/GameField.js","assets/sounds/backgroundMusic.mp3","Game/Game.js","StartPage/StartPage.js","Settings/SettingsStyle.js","Settings/components/SettingsItems.js","redux/actions.js","Settings/components/ToggleButtons.js","Settings/Settings.js","Statistics/StatisticsStyles.js","Statistics/StatisticsPage.js","common/Switcher/Switcher.js","App.js","reportWebVitals.js","redux/initialState.js","redux/reducer.js","index.js"],"names":["stylesCommon","makeStyles","containerPageCenter","margin","maxWidth","padding","position","display","justifyContent","alignItems","centerContainer","toggleNavButton","borderRadius","top","right","zIndex","modalDiv","width","height","background","backgroundSize","fontWeight","fontSize","flexDirection","textAlign","modalButtonContainer","marginTop","columnGap","modalButton","overlay","left","bottom","backgroundColor","styles","navModalContainer","navMenu","textDecoration","navMenuItem","listStyleType","boxSizing","color","textTransform","closeNavMenu","connect","state","lang","theme","isShownNav","NavStyles","handleChange","className","window","location","href","includes","Button","onClick","src","alt","to","style","gameContainer","backgroundRepeate","gameCenterContainer","gameFieldContainer","minWidth","minHeight","flexWrap","gameItem","border","cursor","transition","empty","gameBtnContainer","gameBtn","gameBtnImg","GameCell","props","gameStyles","value","endItem","classCell","id","clickHandler","areEffectsOn","settings","musicVolume","isImages","images","gameItems","sizeGame","updateBoard","backImage","size","zeroIndex","indexOf","sizeContainer","getIndexFromCoord","row","col","zeroCoordinate","idx","Math","floor","column","getCoordFromIndex","changeGameFields","cellItem","audio","Audio","play","volume","possibleTopIdx","possiblRightIdx","possiblBottomIdx","possibleLeftIdx","index","exchangeFileds","board","slice","item","temp","map","xpos","ypos","backgroundImage","backgroundPosition","bind","paddingTop","resultsContainer","marginBottom","timer","marginRight","stepCounter","generateElements","numberArray","random","getRandomIntInclusive","i","push","e","ceil","n","length","j","checkSolution","min","max","isOpen","text","isNewStart","isShownGameOver","isPrefield","commonStyle","useState","isShown","setIsShown","compare","a","b","movesA","moves","movesB","comparison","useEffect","userName","localStorage","name","bestScore","score","arr","statistics","JSON","parse","setItem","stringify","sort","saveBestResults","image","gamePrefield","gamesStyles","prefieldArr","isOverShow","setIsOverShow","setBoard","counter","setCounter","isShowNavMenu","setIsShowNavMenu","setUserName","setSizeGame","backImg","setBackImg","join","oldBoard","generateGameElements","getUserName","startNewGame","isStart","getItem","setUpUserName","type","which","keyCode","target","innerText","trim","blur","contenteditable","onKeyPress","onBlur","newBoard","this","isMusicOn","music","pause","StartPage","Styles","settingsConatainer","rowGap","settingsItem","settingsImg","sliderControl","toggleContainer","toggleButton","navButton","SETTINGS_ITEMS","EN","RU","mapDispatchToProps","toggleSetting","setting","newSliderValue","ariaLabel","checked","payload","settingsStyles","FormControlLabel","control","Slider","aria-label","aria-labelledby","onChange","step","label","Select","MenuItem","Checkbox","createSettingsItem","LANGUAGES","en","ru","CONTENT","numbers","createToggleBtn","buttonItems","Object","keys","ToggleButton","classes","root","toUpperCase","toggleLang","parentNode","toggleImages","ToggleButtonGroup","exclusive","isSwowNavMenu","setIsSwowNavMenu","statisticsContainer","navigationContainer","table","warning","useStyles","TableContainer","component","Paper","Table","TableHead","TableRow","tableHead","TableCell","align","TableBody","scope","Switcher","exact","path","Settings","Statistics","App","commonStyles","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","settingsReducer","action","newSettings","findIndex","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.618803ba.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesCommonObj = {\r\n  containerPageCenter: {\r\n    margin: '0 auto',\r\n    maxWidth: '1200px',\r\n    padding: '0px 20px',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  centerContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  toggleNavButton: {\r\n    borderRadius: '50%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: '12'\r\n  },\r\n\r\n  modalDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '400px',\r\n    height: '250px',\r\n    background: 'url(./images/gameBackground.png)',\r\n    backgroundSize: 'cover',\r\n    zIndex: '12',\r\n    position: 'absolute',\r\n    top: '45%',\r\n    borderRadius: '5px',\r\n    padding: '20px',\r\n    fontWeight: 'bold',\r\n    fontSize: '22px',\r\n    flexDirection: 'column',\r\n    textAlign: 'center'\r\n  },\r\n\r\n  modalButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: '40px',\r\n    columnGap: '1em'\r\n  },\r\n\r\n  modalButton: {\r\n    background: '#d9d9d970',\r\n\r\n    '&:hover': {\r\n      background: '#00000054',\r\n    }\r\n  },\r\n\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgb(20 19 19 / 75%)',\r\n    zIndex: 10\r\n  },\r\n\r\n};\r\n\r\nconst stylesCommon = makeStyles(stylesCommonObj);\r\n\r\nexport default stylesCommon;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesNav = {\r\n  navModalContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgb(20 19 19 / 75%)',\r\n    zIndex: 10\r\n  },\r\n\r\n  navMenu: {\r\n    zIndex: 11,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: '45%',\r\n\r\n    '& a': {\r\n      textDecoration: 'none'\r\n    }\r\n  },\r\n\r\n  navMenuItem: {\r\n    listStyleType: 'none',\r\n    width: '250px',\r\n    height: '50px',\r\n    textAlign: 'center',\r\n    boxSizing: 'border-box',\r\n    background: 'center / contain no-repeat url(./images/gameNavBg.png)',\r\n\r\n    '& span': {\r\n      color: 'black',\r\n      textDecoration: 'none',\r\n      textTransform: 'none'\r\n    }\r\n  },\r\n  \r\n  closeNavMenu: {\r\n    zIndex: 12,\r\n    position: 'fixed',\r\n    top: 10,\r\n    right: 10\r\n  }\r\n};\r\n\r\nconst styles = makeStyles(stylesNav);\r\n\r\nexport default styles;","import NavStyles from './StylesNav';\r\nimport { Button } from '@material-ui/core';\r\nimport React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation({ lang, theme, isShownNav }) {\r\n  const styles = NavStyles();\r\n\r\n  function handleChange() {\r\n    isShownNav(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.navModalContainer}>\r\n      {\r\n        window.location.href.includes('game') || window.location.href.includes('statistics')  || window.location.href.includes('settings')  ? \r\n        <Button className={styles.closeNavMenu} onClick={handleChange}><img src='./images/close.png' alt='close-menu' /></Button> : null\r\n      }\r\n\r\n      <nav className={styles.navMenu}>\r\n        <Link to='/game' ><Button style={{background: 'center / contain no-repeat url(./images/gameNavBg.png)'}} className={styles.navMenuItem} onClick={handleChange}>{lang === 'en' ? 'New game' : 'Новая игра'}</Button></Link>\r\n        <Link to='/statistics' ><Button style={{background: 'center / contain no-repeat url(./images/gameNavBg.png)'}} className={styles.navMenuItem} onClick={handleChange}>{lang === 'en' ? 'Statistics' : 'Статистика'}</Button></Link>\r\n        <Link to='/settings' ><Button style={{background: 'center / contain no-repeat url(./images/gameNavBg.png)'}} className={styles.navMenuItem} onClick={handleChange}>{lang === 'en' ? 'Settings' : 'Настройки'}</Button></Link>\r\n      </nav>\r\n      <div className={styles.overlay}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.lang,\r\n  theme: state.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesGameFieldObj = {\r\n  gameContainer: {\r\n    background: 'url(\"../../../../images/gameBackground.png\")',\r\n    backgroundRepeate: 'no-repeate',\r\n    backgroundSize: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px 20px'\r\n  },\r\n\r\n  gameCenterContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  gameFieldContainer: {\r\n    minWidth: '330px',\r\n    minHeight: '330px',\r\n    background: '#24201b91',\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    padding: '5px 5px'\r\n  },\r\n\r\n  gameItem: {\r\n    minWidth: '95px',\r\n    height: '95px',\r\n    background: '#f4cfcff0',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '5px',\r\n    border: '2px solid black',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.1s ease-in-out',\r\n\r\n    '&:hover': {\r\n      background: '#e9dbdb75',\r\n    }\r\n  },\r\n\r\n  empty: {\r\n    background: 'none!important',\r\n    border: 'none',\r\n\r\n    '&:hover': {\r\n      background: 'none',\r\n    }\r\n  },\r\n\r\n  gameBtnContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '1em',\r\n  },\r\n\r\n  gameBtn: {\r\n    width: '80px',\r\n    height: '80px',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    '&:hover': {\r\n      width: '90px',\r\n      height: '90px'\r\n    },\r\n  },\r\n\r\n  gameBtnImg: {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nconst styles = makeStyles(stylesGameFieldObj);\r\n\r\nexport default styles;","import React from \"react\";\r\nimport styles from '../../../GameFieldStyle';\r\n\r\nexport default function GameCell(props) {\r\n    const gameStyles = styles();\r\n    const value = props.value;\r\n    const endItem = props.endItem;\r\n    const classCell = value === endItem ? `${gameStyles.gameItem} ${gameStyles.empty}` : `${gameStyles.gameItem}`;\r\n\r\n    return (\r\n        <div style={props.style} id={value} className={classCell} onClick={() => props.clickHandler()}>{value === endItem ? '' : value}</div>\r\n    )\r\n}","import styles from '../GameFieldStyle';\r\nimport React from 'react';\r\nimport Cell from './components/GameCell/GameCell';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction GameChips({gameItems, sizeGame,  areEffectsOn, musicVolume, updateBoard, isImages, backImage}) {\r\n  const gameStyles = styles();\r\n  const size = sizeGame;\r\n  const endItem = sizeGame**2;\r\n  const zeroIndex = gameItems.indexOf(endItem);\r\n  const sizeContainer = 110 * size;\r\n\r\n  const getCoordFromIndex = (idx, size) => {\r\n    return {row: Math.floor(idx / size) + 1, column: (idx % size) + 1};\r\n  }\r\n\r\n  const getIndexFromCoord = (row, col, size) => {\r\n    return (size * (row - 1)) + col - 1; \r\n  }\r\n\r\n  const zeroCoordinate = getCoordFromIndex(zeroIndex, size);\r\n\r\n  const changeGameFields = (cellItem) => {\r\n    if (areEffectsOn) {\r\n      let audio = new Audio('./sounds/click.wav');\r\n      audio.play();\r\n      audio.volume = musicVolume;\r\n    }\r\n\r\n    const possibleTopIdx = zeroCoordinate.row > 0 ? getIndexFromCoord(zeroCoordinate.row - 1, zeroCoordinate.column, size) : null;\r\n    const possiblRightIdx = zeroCoordinate.column < size ? getIndexFromCoord(zeroCoordinate.row, zeroCoordinate.column + 1, size) : null;\r\n    const possiblBottomIdx = zeroCoordinate.row < size ? getIndexFromCoord(zeroCoordinate.row + 1, zeroCoordinate.column, size) : null;\r\n    const possibleLeftIdx = zeroCoordinate.column > 0 ? getIndexFromCoord(zeroCoordinate.row, zeroCoordinate.column - 1, size) : null;\r\n    const index = gameItems.indexOf(cellItem);\r\n\r\n    if (index === possibleTopIdx || index === possiblRightIdx || \r\n      index === possiblBottomIdx || index === possibleLeftIdx)\r\n    {\r\n      exchangeFileds(cellItem);\r\n    }\r\n  }\r\n\r\n  const exchangeFileds = (cellItem) => {\r\n    const board = gameItems.slice();\r\n    const item = board.indexOf(cellItem);\r\n    const empty = board.indexOf(endItem);\r\n    const temp = board[item];\r\n    board[item] = board[empty];\r\n    board[empty] = temp;\r\n    updateBoard(board);\r\n  }\r\n\r\n  return (\r\n    <div className={gameStyles.gameFieldContainer} style={{width: sizeContainer, height: sizeContainer}}>\r\n      {\r\n        gameItems.map((item) => {\r\n          let xpos = (100 * (item % size)) + '%';\r\n          let ypos = (100 * Math.floor(item / size)) + '%';\r\n\r\n          return (\r\n            <Cell style={isImages === 'images' ? {backgroundImage: `url(${backImage})`, backgroundPosition: `-${xpos} -${ypos}`, backgroundSize: (size * 100) + '%'} : null} key={item} value={item} clickHandler={changeGameFields.bind(this, item)} endItem={endItem}/>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  areEffectsOn: state.settings[0].state,\r\n  musicVolume: state.settings[2].state,\r\n  isImages: state.images\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameChips);","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesGame = {\r\n  gameCenterContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: '5%'\r\n  },\r\n\r\n  resultsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontWeight: '600',\r\n    marginBottom: '1em'\r\n  },\r\n\r\n  timer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: '20px',\r\n\r\n    '& img': {\r\n      width: '50px',\r\n      height: '50x',\r\n      marginRight: '10px'\r\n    }\r\n  },\r\n\r\n  stepCounter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    '& img': {\r\n      width: '50px',\r\n      height: '50px',\r\n      marginRight: '10px'\r\n    }\r\n  },\r\n\r\n};\r\n\r\nconst styles = makeStyles(stylesGame);\r\n\r\nexport default styles;","export default function generateElements(sizeGame) {\r\n  const endItem = sizeGame * sizeGame;\r\n  let numberArray = [];\r\n  let random = getRandomIntInclusive(1, endItem);\r\n\r\n  for (let i = 1; i <= endItem; i++) {\r\n    while (numberArray.indexOf(random) !== -1) {\r\n      random = getRandomIntInclusive(1, endItem);\r\n    }\r\n    numberArray.push(random);\r\n  }\r\n\r\n  let e = Math.ceil((numberArray.indexOf(endItem) + 1) / sizeGame);\r\n  let summ = checkSolution(numberArray, endItem);\r\n\r\n  if ((summ + e) % 2 !== 0) {\r\n    generateElements(sizeGame);\r\n  }\r\n\r\n  return numberArray;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction checkSolution(numberArray, endItem) {\r\n  let n = 0;\r\n  for (let i = 0; i < numberArray.length; i++) {\r\n    if (numberArray[i] !== endItem) {\r\n      for (let j = i; j < numberArray.length; j++) {\r\n        if (numberArray[i] > numberArray[j] && numberArray[j] !== endItem) {\r\n          n++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return n;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport commonStyle from '../../../../common/styles/common'; \r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction GameOver({isOpen, lang, text, isNewStart, isShownGameOver, isPrefield}) {\r\n  const stylesCommon = commonStyle();\r\n  const [isShown, setIsShown] = useState(isOpen);\r\n\r\n  const startNewGame = () => {\r\n    isShownGameOver(false);\r\n    setIsShown(false);\r\n    isNewStart(true);\r\n  }\r\n\r\n  const goToStart = () => {\r\n    localStorage.board = '';\r\n    localStorage.score = 0;\r\n    localStorage.image = '';\r\n    isShownGameOver(false);\r\n    setIsShown(false);\r\n    window.location.href = '/';\r\n  }\r\n\r\n  const compare = (a, b) => {\r\n    const movesA = a.moves;\r\n    const movesB = b.moves;\r\n  \r\n    let comparison = 0;\r\n    if (movesA > movesB) {\r\n      comparison = 1;\r\n    } else if (movesA < movesB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  const saveBestResults = () => {\r\n    let userName = localStorage.name;\r\n    let scoreGame = +localStorage.score+1;\r\n    let sizeGame = localStorage.size;\r\n    let bestScore = {\r\n      score: scoreGame,\r\n      size: sizeGame, \r\n      name: userName\r\n    };\r\n\r\n    let arr = [];\r\n    if (localStorage.statistics) {\r\n        arr = JSON.parse(localStorage.statistics);\r\n\r\n        if (!arr.includes(bestScore) && arr.length < 11) {\r\n            arr.push(bestScore);\r\n        } else {\r\n            if (arr.length === 30) {\r\n                if (arr[arr.length-1].moves > bestScore.score) {\r\n                    arr[arr.length-1] = bestScore;\r\n                } \r\n            } else if (arr.length < 31) {\r\n                arr.push(bestScore);\r\n            }\r\n        }\r\n    } else {\r\n      arr.push(bestScore);\r\n    }\r\n\r\n    localStorage.setItem('statistics', JSON.stringify(arr.sort(compare)));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isShown && !isPrefield) {\r\n      saveBestResults(); \r\n    }\r\n  }, [])\r\n  \r\n  if (isShown) {\r\n    return (\r\n      <div className={stylesCommon.centerContainer}>\r\n          <div className={stylesCommon.modalDiv}>\r\n            {text}\r\n            <div className={stylesCommon.modalButtonContainer}>\r\n              <Button className={stylesCommon.modalButton} onClick={startNewGame}>{lang === 'en' ? 'New game' : 'Новая игра'}</Button>\r\n              <Button className={stylesCommon.modalButton} onClick={goToStart}>{lang === 'en' ? 'Cancel' : 'Отмена'}</Button>\r\n            </div>\r\n          </div>\r\n        <div className={stylesCommon.overlay}></div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.lang\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameOver);","import GameChips from './components/GameChips'\r\nimport style from \"./GameFieldStyle\";\r\nimport gamesStyles from '../../GameStyles';\r\nimport { connect } from 'react-redux';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport generateGameElements from './GameFunctions/generateGameElements';\r\nimport GameOver from '../GameField/components/GameOver';\r\nimport { Button } from '@material-ui/core';\r\nimport Navigation from '../../../Navigation/Navigation';\r\n// import Timer from '../Timer/Timer';\r\n\r\nfunction GameField({ size, gamePrefield, lang }) {\r\n  const gameStyles = style();\r\n  const styles = gamesStyles();\r\n  const prefieldArr = [];\r\n  const [isOverShow, setIsOverShow] = useState(false);\r\n  const [board, setBoard] = useState(prefieldArr);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isShowNavMenu, setIsShowNavMenu] = useState(false);\r\n  const [userName, setUserName] = useState(lang === 'en' ? '[Enter user name]' : '[Введите имя игрока]');\r\n  const [sizeGame, setSizeGame] = useState(size);  \r\n  const [backImg, setBackImg] = useState('./images/gameImages/image1.jpg');  \r\n  let images = ['./images/gameImages/image1.jpg', './images/gameImages/image2.jpg', './images/gameImages/image3.jpg', './images/gameImages/image4.jpg',\r\n  './images/gameImages/image5.jpg', './images/gameImages/image6.jpg', './images/gameImages/image7.jpg', './images/gameImages/image8.jpg', './images/gameImages/image9.jpg', './images/gameImages/image10.jpg' ];\r\n\r\n  for (let i = 1; i <= sizeGame**2; i++){\r\n    prefieldArr.push(i);\r\n  }\r\n\r\n  useEffect(()=> {\r\n    if (!gamePrefield && board.join() !== prefieldArr.join()) \r\n    {\r\n      localStorage.setItem('size', sizeGame);\r\n      localStorage.setItem('score', JSON.stringify(counter));\r\n      localStorage.setItem('board', JSON.stringify(board));\r\n    }\r\n  })\r\n  \r\n  useEffect(()=>{\r\n    if (gamePrefield) {\r\n      setBoard(prefieldArr);\r\n    } \r\n    else {\r\n      let oldBoard = localStorage.board? JSON.parse(localStorage.board) : null;\r\n\r\n      if (oldBoard) {\r\n        setBoard(oldBoard);\r\n        setSizeGame(localStorage.size || size);\r\n        setBackImg(localStorage.image || images[Math.floor(Math.random() * images.length)]);\r\n      } else {\r\n        setBoard(generateGameElements(sizeGame));\r\n        setBackImg(images[Math.floor(Math.random() * images.length)]);\r\n      }\r\n    }\r\n\r\n    setCounter(+localStorage.score || counter);\r\n    getUserName();\r\n\r\n  }, []);\r\n\r\n  const updateBoard = (newBoard) => {\r\n    setCounter(counter+1);\r\n    setBoard(newBoard);\r\n    localStorage.setItem('score', counter);\r\n    localStorage.setItem('board', JSON.stringify(board));\r\n    localStorage.setItem('image', backImg);\r\n\r\n    if (newBoard.join() === prefieldArr.join()){\r\n      setIsOverShow(true);\r\n    }\r\n  }\r\n\r\n  const startNewGame = (isStart) => {\r\n    if (isStart) {\r\n      setBoard(generateGameElements(sizeGame));\r\n      setCounter(0);\r\n      setIsOverShow(false);\r\n      setBackImg(images[Math.floor(Math.random() * images.length)]);\r\n      localStorage.setItem('score', counter);\r\n      localStorage.setItem('board', board);\r\n      localStorage.setItem('image', backImg);\r\n    }\r\n  }\r\n\r\n  const getUserName = () => {\r\n    if (localStorage.getItem('name') === null || localStorage.getItem('name' === '')){\r\n      setUserName(lang === 'en' ? '[Enter user name]' : '[Введите имя игрока]');\r\n    } else {\r\n        setUserName(localStorage.getItem('name'));\r\n    }\r\n  }\r\n\r\n  const setUpUserName = (e) => {\r\n    if (e.type === 'keypress') {\r\n      if (e.which == 13 || e.keyCode == 13) {\r\n        if (e.target.innerText.trim().length > 0 && e.target.innerText !== '') {\r\n          localStorage.setItem('name', e.target.innerText);\r\n          e.target.blur();\r\n        } else {\r\n          getUserName();\r\n          e.target.blur();\r\n        }\r\n      }\r\n    } else {\r\n      if (e.target.innerText.trim().length > 0 && e.target.innerText !== '') {\r\n        localStorage.setItem('name', e.target.innerText);\r\n      } else {\r\n        getUserName();\r\n      }\r\n    }\r\n  }\r\n\r\n  const clearUserNameField = (e) => {\r\n    setUserName('');\r\n    setUpUserName(e);\r\n  }\r\n\r\n  const isShownGameOver = (value) => {\r\n    setIsOverShow(false);\r\n  }\r\n\r\n  const onSwowNavMenu = (value) => {\r\n    setIsShowNavMenu(value);\r\n  }\r\n\r\n  return (\r\n    <div className={gameStyles.gameCenterContainer}>\r\n      <div className={styles.resultsContainer}>\r\n        <div className={styles.timer}><span id='userName' contenteditable='true' onClick={clearUserNameField} onKeyPress={setUpUserName} onBlur={setUpUserName}>{userName}</span></div>\r\n        {/* <div className={styles.timer}>\r\n          <img src='../../images/hourglass.png' alt='game-time' />\r\n          <Timer/>\r\n        </div> */}\r\n        <div className={styles.stepCounter}>\r\n          <img src='./images/counter.png' alt='step-count' />\r\n          <span>{counter}</span> \r\n        </div>\r\n      </div>\r\n\r\n      { isOverShow ?  <GameOver isNewStart={startNewGame} isShownGameOver={isShownGameOver} isOpen={isOverShow} text={lang === 'en' ? `Congratulations! You solved the puzzle in ${counter} moves.` : `Вы выйграли! Количество шагов ${counter}`}/> : null}\r\n      \r\n      <div className={gameStyles.gameContainer}>\r\n        <GameChips backImage={backImg} sizeGame={sizeGame} gameItems={board} gamePrefield={gamePrefield} updateBoard={updateBoard.bind(this)}/>\r\n      </div>\r\n\r\n      <div className={gameStyles.gameBtnContainer}>\r\n        <Button className={gameStyles.gameBtn}>\r\n          <img className={gameStyles.gameBtnImg} src='./images/pause.png' alt='pause' />\r\n        </Button>\r\n        <Button className={gameStyles.gameBtn} onClick={startNewGame}>\r\n          <img className={gameStyles.gameBtnImg} src='./images/repeate.png' alt='repeate-game' />\r\n        </Button>\r\n        <Button className={gameStyles.gameBtn} onClick={()=> {setIsShowNavMenu(true)}}>\r\n          <img className={gameStyles.gameBtnImg} src='./images/menu.png' alt='nav-menu' />\r\n        </Button>\r\n      </div>\r\n      { isShowNavMenu ? <Navigation isShownNav={onSwowNavMenu} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  size: state.settings[3].state,\r\n  lang: state.lang\r\n});\r\n\r\nexport default connect(mapStateToProps)(GameField);","export default __webpack_public_path__ + \"static/media/backgroundMusic.8d54f783.mp3\";","import GameField from './components/GameField/GameField'\r\nimport gameStyles from './GameStyles';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport music from '../assets/sounds/backgroundMusic.mp3';\r\n\r\nfunction Game({gamePrefield, isMusicOn, musicVolume}) {\r\n  const styles = gameStyles();\r\n\r\n  useEffect(() => {\r\n    let audio = new Audio(music);\r\n      if (isMusicOn && !gamePrefield) {\r\n        audio.play();\r\n        audio.volume = musicVolume;\r\n      } else {\r\n        audio.pause();\r\n      }\r\n  \r\n      return function cleanup() {\r\n        audio.pause();\r\n      }\r\n  })\r\n\r\n  return (\r\n    <div className={styles.gameCenterContainer}>\r\n      <GameField gamePrefield={gamePrefield} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isMusicOn: state.settings[1].state,\r\n  musicVolume: state.settings[2].state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Game);","import React, {useState} from \"react\";\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Game from '../Game/Game';\r\nimport Styles from '../common/styles/common';\r\n\r\nexport default function StartPage() {\r\n  const styles = Styles();\r\n\r\n  return (\r\n    <div>\r\n      <Navigation isShownNav={()=>{return true}} />\r\n      <Game gamePrefield={true} />\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesGame = {\r\n  gameCenterContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: '5%'\r\n  },\r\n\r\n  gameBtn: {\r\n    width: '80px',\r\n    height: '80px',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    '&:hover': {\r\n      width: '90px',\r\n      height: '90px'\r\n    },\r\n  },\r\n\r\n  gameBtnImg: {\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n\r\n  settingsConatainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    rowGap: '1em'\r\n  },\r\n\r\n  settingsItem: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    columnGap: '1em'\r\n  },\r\n\r\n  settingsImg: {\r\n    width: '60px',\r\n    height: '60px'\r\n  },\r\n\r\n  sliderControl: {\r\n    width: '150px',\r\n  },\r\n\r\n  toggleContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '2em',\r\n    marginTop: '2em',\r\n    color: 'black'\r\n  },\r\n\r\n  toggleButton: {\r\n    color: 'black!important',\r\n    border: '1px solid rgb(0 0 0 / 50%);',\r\n    backgroundColor: 'rgb(201 105 0 / 62%)'\r\n  },\r\n\r\n  navButton: {\r\n    marginTop: '20px',\r\n    width: '100%',\r\n    color: 'black!important',\r\n    border: '1px solid rgb(0 0 0 / 50%);',\r\n    backgroundColor: 'rgb(201 105 0 / 62%)',\r\n\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(201 105 0 / 22%)',\r\n    }\r\n  }\r\n};\r\n\r\nconst styles = makeStyles(stylesGame);\r\n\r\nexport default styles;","import settingsStyles from '../SettingsStyle';\r\nimport { connect } from 'react-redux';\r\nimport { toggleSetting } from '../../redux/actions';\r\nimport { FormControlLabel, Checkbox, Select, MenuItem, Slider } from '@material-ui/core';\r\n\r\nconst SETTINGS_ITEMS = {\r\n  EN: {\r\n    'areEffectsOn': 'Sound effects',\r\n    'isMusicOn': 'Music',\r\n    'musicVolume': 'Volume',\r\n    'isSizeGame': 'Game size field',\r\n  },\r\n  RU: {\r\n    'areEffectsOn': 'Звуковые эффекты',\r\n    'isMusicOn': 'Музыка',\r\n    'musicVolume': 'Громкость',\r\n    'isSizeGame': 'Размер игрового поля',\r\n  }\r\n}\r\n\r\nfunction createSettingsItem(item, lang, toggleSetting, styles) {\r\n  if (item.id === 'musicVolume') {\r\n    return (\r\n      <div key={item.id} className={styles.settingsItem}>\r\n        <img src={`./images/${item.id}.png`} alt={item.id} className={styles.settingsImg} />\r\n        <FormControlLabel\r\n          key={item.id}\r\n          control={\r\n            <Slider\r\n              aria-label='musicVolume'\r\n              aria-labelledby=\"continuous-slider\"\r\n              value={item.state}\r\n              onChange={toggleSetting}\r\n              step={0.1}\r\n              min={0}\r\n              max={1} />\r\n          }\r\n          className={styles.sliderControl}\r\n          label={lang === 'en' ? SETTINGS_ITEMS.EN[item.id] : SETTINGS_ITEMS.RU[item.id]}\r\n        />\r\n      </div>\r\n    )\r\n  } else if (item.id === 'isSizeGame') {\r\n    return (\r\n      <div key={item.id} className={styles.settingsItem}>\r\n        <img src={`./images/${item.id}.png`} alt={item.id} className={styles.settingsImg} />\r\n        <FormControlLabel\r\n          key={item.id}\r\n          control={\r\n            <Select\r\n              value={item.state}\r\n              checked={item.state}\r\n              onChange={toggleSetting}\r\n              name={item.id}\r\n              color='primary'\r\n            >\r\n              <MenuItem value=\"3\">3x3</MenuItem>\r\n              <MenuItem value=\"4\">4x4</MenuItem>\r\n              <MenuItem value=\"5\">5x5</MenuItem>\r\n              <MenuItem value=\"6\">6x6</MenuItem>\r\n              <MenuItem value=\"7\">7x7</MenuItem>\r\n              <MenuItem value=\"8\">8x8</MenuItem>\r\n            </Select>\r\n          }\r\n          label={lang === 'en' ? SETTINGS_ITEMS.EN[item.id] : SETTINGS_ITEMS.RU[item.id]}\r\n        />\r\n      </div>)\r\n  } else {\r\n    return (\r\n      <div key={item.id} className={styles.settingsItem}>\r\n        <img src={`./images/${item.id}.png`} alt={item.id} className={styles.settingsImg} />\r\n        <FormControlLabel\r\n          key={item.id}\r\n          control={\r\n            <Checkbox\r\n              checked={item.state}\r\n              onChange={toggleSetting}\r\n              name={item.id}\r\n              color='primary'\r\n            />\r\n          }\r\n          label={lang === 'en' ? SETTINGS_ITEMS.EN[item.id] : SETTINGS_ITEMS.RU[item.id]}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction SettingsItems({ settings, lang, toggleSetting }) {\r\n  const styles = settingsStyles();\r\n  return (\r\n    <div className={styles.settingsConatainer}>\r\n      {settings.map((item) => {\r\n        return createSettingsItem(item, lang, toggleSetting, styles);\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  settings: state.settings,\r\n  lang: state.lang\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleSetting\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsItems);","export function toggleSetting(setting, newSliderValue) {\r\n  if (setting.target.value) {\r\n    localStorage.board = '';\r\n  }\r\n  return {\r\n    type: 'TOGGLE_SETTINGS',\r\n    target: setting.target.name || setting.target.ariaLabel,\r\n    value: setting.target.checked || setting.target.value || newSliderValue,\r\n    payload: setting,\r\n  };\r\n}\r\n\r\nexport function toggleLang(lang) {\r\n  return {\r\n    type: 'TOGGLE_LANG',\r\n    value: lang.target.value || lang.target.parentNode.value,\r\n    payload: lang,\r\n  };\r\n}\r\n\r\nexport function toggleImages(images) {\r\n  return {\r\n    type: 'TOGGLE_IMAGES',\r\n    value: images.target.value || images.target.parentNode.value,\r\n    payload: images,\r\n  };\r\n}\r\n\r\nexport function toggleScore(score) {\r\n  return {\r\n    type: 'TOGGLE_SCORE',\r\n    value: score,\r\n    payload: score,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport settingsStyles from '../SettingsStyle';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\nimport { connect } from 'react-redux';\r\nimport { toggleLang, toggleImages } from '../../redux/actions';\r\n\r\nconst LANGUAGES = {\r\n  en: 'en',\r\n  ru: 'ru',\r\n};\r\n\r\nconst CONTENT = {\r\n  EN: {\r\n    images: 'images',\r\n    numbers: 'numbers'\r\n  },\r\n  RU:\r\n  {\r\n    images: 'Изображение',\r\n    numbers: 'Числа'\r\n  }\r\n};\r\n\r\nfunction createToggleBtn(buttonItems) {\r\n  const styles = settingsStyles();\r\n  const buttons = Object.keys(buttonItems).map((item, idx) => (\r\n    < ToggleButton\r\n      value={item}\r\n      key={`${item}${idx}`}\r\n      classes={{root: styles.toggleButton}}\r\n      color='primary'\r\n    >\r\n      {buttonItems[item].toUpperCase()}\r\n    </ToggleButton >\r\n  ));\r\n\r\n  return buttons;\r\n}\r\n\r\nfunction ToggleButtons({ lang, toggleLang, images, toggleImages }) {\r\n  const styles = settingsStyles();\r\n  return (\r\n    <div className={styles.toggleContainer}>\r\n      <ToggleButtonGroup\r\n        value={lang}\r\n        exclusive\r\n        onChange={toggleLang}\r\n        key='lang'\r\n        className={styles.toggleButton}\r\n      >\r\n        {createToggleBtn(LANGUAGES, styles)}\r\n      </ToggleButtonGroup>\r\n      <ToggleButtonGroup\r\n        value={images}\r\n        exclusive\r\n        onChange={toggleImages}\r\n        key='image'\r\n        className={styles.toggleButton}\r\n      >\r\n        {createToggleBtn(lang === 'en' ? CONTENT.EN : CONTENT.RU)}\r\n      </ToggleButtonGroup>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.lang,\r\n  images: state.images,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleLang,\r\n  toggleImages\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleButtons);\r\n","import React, {useState} from 'react';\r\nimport settingsStyles from './SettingsStyle';\r\nimport SettingsItems from './components/SettingsItems';\r\nimport ToggleButtons from './components/ToggleButtons';\r\nimport { Button } from '@material-ui/core';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Settings({ lang }) {\r\n  const styles = settingsStyles();\r\n  const [isSwowNavMenu, setIsSwowNavMenu] = useState(false);\r\n\r\n  function handleChangeNavShown(e) {\r\n    setIsSwowNavMenu(e);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.gameCenterContainer}>\r\n      <SettingsItems />\r\n      <ToggleButtons />\r\n      <Button className={styles.navButton} onClick={() => { setIsSwowNavMenu(true) }}>{lang === 'en' ? 'Nav menu' : 'Меню навигации'}</Button>\r\n      {isSwowNavMenu ? <Navigation isShownNav={handleChangeNavShown}/> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.lang\r\n});\r\n\r\nexport default connect(mapStateToProps)(Settings);","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const stylesStatistics = {\r\n  statisticsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    position: 'relative',\r\n    paddingTop: '40px'\r\n  },\r\n\r\n  navigationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  navButton: {\r\n    marginBottom: '20px',\r\n    width: '50%',\r\n    color: 'black!important',\r\n    border: '1px solid rgb(0 0 0 / 50%);',\r\n    backgroundColor: 'rgb(201 105 0 / 62%)',\r\n\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(201 105 0 / 22%)',\r\n    }\r\n  },\r\n\r\n  table: {\r\n    minWidth: 450,\r\n  },\r\n\r\n  warning: {\r\n    padding: '20px'\r\n  }\r\n};\r\n\r\nconst styles = makeStyles(stylesStatistics);\r\n\r\nexport default styles;","import React, {useState} from 'react';\r\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\nimport useStyles from './StatisticsStyles';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction StatisticsPage({lang}) {\r\n  const styles = useStyles();\r\n  const [isSwowNavMenu, setIsSwowNavMenu] = useState(false);\r\n  const statistics = localStorage.statistics ?  JSON.parse(localStorage.statistics) : [];\r\n\r\n  function handleChangeNavShown(e) {\r\n    setIsSwowNavMenu(e);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.statisticsContainer}>\r\n      <Button className={styles.navButton} onClick={() => { setIsSwowNavMenu(true) }}>{lang === 'en' ? 'Nav menu' : 'Меню навигации'}</Button>\r\n      {isSwowNavMenu ? <Navigation isShownNav={handleChangeNavShown}/> : null}\r\n      \r\n      <TableContainer component={Paper}>\r\n        <Table className={styles.table} aria-label=\"simple table\">\r\n          <TableHead style={{backgroundColor: '#b05a009e', fontWeight: 'bold'}}>\r\n            <TableRow classes={styles.tableHead}>\r\n              <TableCell>Player name</TableCell>\r\n              <TableCell align=\"right\">Score</TableCell>\r\n              <TableCell align=\"right\">Game field size</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            { statistics.length !== 0 ? statistics.map((row) => (\r\n              <TableRow key={row.name} style={{backgroundColor: 'rgb(206 162 115 / 43%)'}}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name || 'unknown'}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.score}</TableCell>\r\n                <TableCell align=\"right\">{row.size}</TableCell>\r\n              </TableRow>\r\n            )) : <span className={styles.warning}>No items yet.</span>}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lang: state.lang\r\n});\r\n\r\nexport default connect(mapStateToProps)(StatisticsPage);","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport StartPage from '../../StartPage/StartPage';\r\nimport Game from '../../Game/Game';\r\nimport Settings from '../../Settings/Settings';\r\nimport Statistics from '../../Statistics/StatisticsPage';\r\n\r\nexport default function Switcher() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={StartPage} />\r\n      <Route path='/game'>\r\n        <Game gamePrefield={false} />\r\n      </Route>\r\n      <Route path='/settings' component={Settings} />\r\n      <Route path='/statistics' component={Statistics} />\r\n      <Redirect path='*' to='/' />\r\n    </Switch>\r\n  );\r\n}\r\n","import { HashRouter as Router } from 'react-router-dom';\r\nimport commonStyles from './common/styles/common';\r\nimport Switcher from './common/Switcher/Switcher';\r\nimport Navigation from './Navigation/Navigation';\r\nimport { Button } from '@material-ui/core';\r\nimport React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const styles = commonStyles();\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className={styles.containerPageCenter}>\r\n        <Switcher />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  settings: [\r\n    {\r\n      id: 'areEffectsOn',\r\n      state: true,\r\n    },\r\n    {\r\n      id: 'isMusicOn',\r\n      state: true,\r\n    },\r\n    {\r\n      id: 'musicVolume',\r\n      state: 0.5,\r\n    },\r\n    {\r\n      id: 'isSizeGame',\r\n      state: 3,\r\n    },\r\n  ],\r\n  lang: 'en',\r\n  images: 'images',\r\n  score: 0\r\n};\r\n\r\nexport default initialState;","import initialState from './initialState';\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_SETTINGS':\r\n      const newSettings = state.settings.slice();\r\n      const index = newSettings.findIndex(item => item.id === action.target);\r\n      newSettings[index].state = action.value;\r\n      return { ...state, settings: [...newSettings] }\r\n\r\n    case 'TOGGLE_LANG':\r\n      return { ...state, lang: action.value }\r\n\r\n    case 'TOGGLE_IMAGES':\r\n      return { ...state, images: action.value }\r\n\r\n    case 'TOGGLE_SCORE':\r\n      return { ...state, score: action.payload }\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default settingsReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './redux/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}